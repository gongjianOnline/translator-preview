{"version":3,"sources":["components/configure/configure.js","components/source/source.js","bin/axiosConfig.js","view/translate/translate.js","App.js","reportWebVitals.js","index.js"],"names":["Configure","props","useState","value","label","Language","setLanguage","className","onClick","event","e","stopPropagation","elem","document","getElementsByClassName","split","indexOf","classList","remove","add","targetFun","map","item","index","configure","targetLanguageFun","Source","sourceLanguage","setSourceLanguage","getSource","request","axios","create","baseURL","interceptors","use","config","response","res","Search","Input","Translate","query","setQuery","select","setSelect","selectFun","AppElement","Sources","setSources","Configures","setConfigures","data","getConfigure","placeholder","allowClear","enterButton","size","onInput","target","emptyInputFun","onSearch","methods","url","params","word","from","to","then","error_code","alert","trans_result","dst","get_baiduFun","App","targetElement","sourceElement","sourceElementClassList","console","log","cleanClassFun","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"mKA2KgBA,G,MAzKE,SAACC,GAEjB,IAFyB,EAiIIC,oBAAS,WACpC,MAAO,CACLC,MAAM,KACNC,MAAM,mBApIe,mBAiIpBC,EAjIoB,KAiIXC,EAjIW,KAiJzB,OACE,qBAAKC,UAAU,sBAAf,SACE,6BACE,qBAAIA,UAAU,mBAAmBC,QAAS,SAACC,IAlJ/B,SAACC,GACjBA,EAAEC,kBACF,IAAIC,EAAOC,SAASC,uBAAuB,sBAC1BF,EAAK,GAAGL,UAAWQ,MAAM,KAC7BC,QAAQ,cAAgB,GACnCJ,EAAK,GAAGK,UAAUC,OAAO,eACzBN,EAAK,GAAGK,UAAUE,IAAI,gBAEtBP,EAAK,GAAGK,UAAUC,OAAO,cACzBN,EAAK,GAAGK,UAAUE,IAAI,gBAyIgCC,CAAUX,IAA9D,uCACSJ,EAASD,MAChB,qBAAKG,UAAU,gCAAf,SACE,oBAAIA,UAAU,yBAAd,SAxIa,CACrB,CACEH,MAAM,eACND,MAAM,MAER,CACEC,MAAM,eACND,MAAM,MAER,CACEC,MAAM,eACND,MAAM,OAER,CACEC,MAAM,qBACND,MAAM,OAER,CACEC,MAAM,eACND,MAAM,MAER,CACEC,MAAM,eACND,MAAM,OAER,CACEC,MAAM,eACND,MAAM,OAER,CACEC,MAAM,2BACND,MAAM,OAER,CACEC,MAAM,eACND,MAAM,MAER,CACEC,MAAM,2BACND,MAAM,OAER,CACEC,MAAM,eACND,MAAM,MAER,CACEC,MAAM,2BACND,MAAM,MAER,CACEC,MAAM,eACND,MAAM,MAER,CACEC,MAAM,2BACND,MAAM,MAER,CACEC,MAAM,qBACND,MAAM,MAER,CACEC,MAAM,qBACND,MAAM,MAER,CACEC,MAAM,qBACND,MAAM,MAER,CACEC,MAAM,iCACND,MAAM,OAER,CACEC,MAAM,iCACND,MAAM,OAER,CACEC,MAAM,qBACND,MAAM,OAER,CACEC,MAAM,qBACND,MAAM,OAER,CACEC,MAAM,qBACND,MAAM,MAER,CACEC,MAAM,iCACND,MAAM,OAER,CACEC,MAAM,uCACND,MAAM,OAER,CACEC,MAAM,qBACND,MAAM,OAER,CACEC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","file":"static/js/main.e26d5956.chunk.js","sourcesContent":["import {useState} from \"react\"\r\nimport \"./configure.css\"\r\nconst Configure = (props)=>{\r\n  //显示隐藏菜单栏\r\n  const targetFun = (e)=>{\r\n    e.stopPropagation(); //阻止冒泡\r\n    let elem = document.getElementsByClassName(\"language-container\");\r\n    let classList = (elem[0].className).split(' ')\r\n    if(classList.indexOf(\"isShowTrue\") < 0){\r\n      elem[0].classList.remove(\"isShowFalse\");\r\n      elem[0].classList.add(\"isShowTrue\");\r\n    }else{\r\n      elem[0].classList.remove(\"isShowTrue\");\r\n      elem[0].classList.add(\"isShowFalse\");\r\n    }\r\n  }\r\n  //目标语言数据源\r\n  const targetLanguage = [\r\n    {\r\n      label:'中文',\r\n      value:\"zh\"\r\n    },\r\n    {\r\n      label:'英语',\r\n      value:\"en\"\r\n    },\r\n    {\r\n      label:'粤语',\r\n      value:\"yue\"\r\n    },\r\n    {\r\n      label:'文言文',\r\n      value:\"yue\"\r\n    },\r\n    {\r\n      label:'日语',\r\n      value:\"jp\"\r\n    },\r\n    {\r\n      label:'韩语',\r\n      value:\"kor\"\r\n    },\r\n    {\r\n      label:'法语',\r\n      value:\"fra\"\r\n    },\r\n    {\r\n      label:'西班牙语',\r\n      value:\"spa\"\r\n    },\r\n    {\r\n      label:'泰语',\r\n      value:\"th\"\r\n    },\r\n    {\r\n      label:'阿拉伯语',\r\n      value:\"ara\"\r\n    },\r\n    {\r\n      label:'俄语',\r\n      value:\"ru\"\r\n    },\r\n    {\r\n      label:'葡头牙语',\r\n      value:\"pt\"\r\n    },\r\n    {\r\n      label:'德语',\r\n      value:\"de\"\r\n    },\r\n    {\r\n      label:'意大利语',\r\n      value:\"it\"\r\n    },\r\n    {\r\n      label:'希腊语',\r\n      value:\"el\"\r\n    },\r\n    {\r\n      label:'荷兰语',\r\n      value:\"nl\"\r\n    },\r\n    {\r\n      label:'波兰语',\r\n      value:\"pl\"\r\n    },\r\n    {\r\n      label:'保加利亚语',\r\n      value:\"bul\"\r\n    },\r\n    {\r\n      label:'爱沙尼亚语',\r\n      value:\"est\"\r\n    },\r\n    {\r\n      label:'丹麦语',\r\n      value:\"dan\"\r\n    },\r\n    {\r\n      label:'芬兰语',\r\n      value:\"fin\"\r\n    },\r\n    {\r\n      label:'捷克语',\r\n      value:\"cs\"\r\n    },\r\n    {\r\n      label:'罗马尼亚语',\r\n      value:\"rom\"\r\n    },\r\n    {\r\n      label:'斯洛文尼亚语',\r\n      value:\"slo\"\r\n    },\r\n    {\r\n      label:'瑞典语',\r\n      value:\"swe\"\r\n    },\r\n    {\r\n      label:'匈牙利语',\r\n      value:\"hu\"\r\n    },\r\n    {\r\n      label:'繁体中文',\r\n      value:\"cht\"\r\n    },\r\n    {\r\n      label:'越南语',\r\n      value:\"vie\"\r\n    },\r\n  ];\r\n  let [Language,setLanguage] = useState(()=>{\r\n    return {\r\n      value:'en',\r\n      label:'英文'\r\n    }\r\n  })\r\n  //目标按钮显示\r\n  let targetLanguageFun = (item)=>{\r\n    props.configure(item)\r\n    setLanguage(\r\n      {\r\n        value:item.value,\r\n        label:item.label\r\n      }\r\n    )\r\n  }\r\n  return (\r\n    <div className=\"configure-container\">\r\n      <ul>\r\n        <li className=\"target-container\" onClick={(event)=>{targetFun(event)}}>\r\n          目标语言: {Language.label}\r\n          <div className=\"language-container isShowTrue\">\r\n            <ul className=\"languageList-container\">\r\n              {\r\n                targetLanguage.map((item,index)=>{\r\n                  return(\r\n                    <li key={index}\r\n                        className=\"languageList-content\"\r\n                        onClick={()=>{targetLanguageFun(item)}}>{item.label}</li>\r\n                  )\r\n                })\r\n              }\r\n            </ul>\r\n\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\nexport  default Configure\r\n","import {useState} from \"react\"\r\nimport \"./source.css\"\r\nconst Source = (props)=>{\r\n  //显示隐藏菜单栏\r\n  const targetFun = (e)=>{\r\n    e.stopPropagation();\r\n    let elem = document.getElementsByClassName(\"source-language-container\");\r\n    let classList = (elem[0].className).split(' ')\r\n    if(classList.indexOf(\"isShowTrue\") < 0){\r\n      elem[0].classList.remove(\"isShowFalse\");\r\n      elem[0].classList.add(\"isShowTrue\");\r\n    }else{\r\n      elem[0].classList.remove(\"isShowTrue\");\r\n      elem[0].classList.add(\"isShowFalse\");\r\n    }\r\n  }\r\n  //源语言数据源\r\n  const targetLanguage = [\r\n    {\r\n      label:'自动检测',\r\n      value:\"auto\"\r\n    },\r\n    {\r\n      label:'中文',\r\n      value:\"zh\"\r\n    },\r\n    {\r\n      label:'英语',\r\n      value:\"en\"\r\n    },\r\n    {\r\n      label:'粤语',\r\n      value:\"yue\"\r\n    },\r\n    {\r\n      label:'文言文',\r\n      value:\"yue\"\r\n    },\r\n    {\r\n      label:'日语',\r\n      value:\"jp\"\r\n    },\r\n    {\r\n      label:'韩语',\r\n      value:\"kor\"\r\n    },\r\n    {\r\n      label:'法语',\r\n      value:\"fra\"\r\n    },\r\n    {\r\n      label:'西班牙语',\r\n      value:\"spa\"\r\n    },\r\n    {\r\n      label:'泰语',\r\n      value:\"th\"\r\n    },\r\n    {\r\n      label:'阿拉伯语',\r\n      value:\"ara\"\r\n    },\r\n    {\r\n      label:'俄语',\r\n      value:\"ru\"\r\n    },\r\n    {\r\n      label:'葡头牙语',\r\n      value:\"pt\"\r\n    },\r\n    {\r\n      label:'德语',\r\n      value:\"de\"\r\n    },\r\n    {\r\n      label:'意大利语',\r\n      value:\"it\"\r\n    },\r\n    {\r\n      label:'希腊语',\r\n      value:\"el\"\r\n    },\r\n    {\r\n      label:'荷兰语',\r\n      value:\"nl\"\r\n    },\r\n    {\r\n      label:'波兰语',\r\n      value:\"pl\"\r\n    },\r\n    {\r\n      label:'保加利亚语',\r\n      value:\"bul\"\r\n    },\r\n    {\r\n      label:'爱沙尼亚语',\r\n      value:\"est\"\r\n    },\r\n    {\r\n      label:'丹麦语',\r\n      value:\"dan\"\r\n    },\r\n    {\r\n      label:'芬兰语',\r\n      value:\"fin\"\r\n    },\r\n    {\r\n      label:'捷克语',\r\n      value:\"cs\"\r\n    },\r\n    {\r\n      label:'罗马尼亚语',\r\n      value:\"rom\"\r\n    },\r\n    {\r\n      label:'斯洛文尼亚语',\r\n      value:\"slo\"\r\n    },\r\n    {\r\n      label:'瑞典语',\r\n      value:\"swe\"\r\n    },\r\n    {\r\n      label:'匈牙利语',\r\n      value:\"hu\"\r\n    },\r\n    {\r\n      label:'繁体中文',\r\n      value:\"cht\"\r\n    },\r\n    {\r\n      label:'越南语',\r\n      value:\"vie\"\r\n    },\r\n  ];\r\n  let [sourceLanguage,setSourceLanguage] = useState(()=>{\r\n    return {\r\n      value:'auto',\r\n      label:'自动检测'\r\n    }\r\n  })\r\n  //目标按钮显示\r\n  let targetLanguageFun = (item)=>{\r\n    props.getSource(item);\r\n    setSourceLanguage(\r\n      {\r\n        value:item.value,\r\n        label:item.label\r\n      }\r\n    )\r\n  }\r\n  return (\r\n    <div className=\"source-container\">\r\n      <ul>\r\n        <li className=\"sourceLanguage-container\" onClick={(event)=>{targetFun(event)}}>\r\n          源语言: {sourceLanguage.label}\r\n          <div className=\"source-language-container isShowTrue\">\r\n            <ul className=\"source-languageList-container\">\r\n              {\r\n                targetLanguage.map((item,index)=>{\r\n                  return(\r\n                    <li key={index}\r\n                        className=\"source-languageList-content\"\r\n                        onClick={()=>{targetLanguageFun(item)}}>{item.label}</li>\r\n                  )\r\n                })\r\n              }\r\n            </ul>\r\n\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\nexport  default Source\r\n","import axios from 'axios'\r\nconst request= axios.create({\r\n  baseURL: 'http://39.98.154.87:8888/'\r\n})\r\n\r\n// 添加请求拦截器\r\nrequest.interceptors.request.use(config => {\r\n  // 写你想要处理的代码，注意：config一定要返回，否则会报错\r\n  // ...\r\n  return config\r\n})\r\n// 添加响应拦截器\r\nrequest.interceptors.response.use(res => {\r\n  // 处理响应的代码写在这里，注意：res一定要返回，否则会报错\r\n  return res\r\n})\r\nexport { request}\r\n","import React,{useState} from \"react\"\r\nimport Configure from \"../../components/configure/configure\"\r\nimport Source from \"../../components/source/source\"\r\n// import axios from \"axios\"\r\nimport {request} from \"../../bin/axiosConfig\"\r\nimport md5 from 'js-md5'\r\nimport \"./translate.css\"\r\nimport \"../../App.css\"\r\nimport { Input } from 'antd';\r\nconst { Search } = Input;\r\n\r\n\r\nconst Translate = ()=>{\r\n  // 翻译功能\r\n  const [query,setQuery] = useState(\"\")\r\n  const get_baiduFun = (value)=>{\r\n    if(value){\r\n      request({\r\n        methods:\"get\",\r\n        url:\"/baiduCurrency\",\r\n        params:{\r\n          word:value,\r\n          from:Sources.value,\r\n          to:Configures.value,\r\n        }\r\n      }).then((response)=>{\r\n        if(response.data.error_code){\r\n          alert(`错误提示:${response.data.error_code}`)\r\n        }else{\r\n          setQuery(response.data.trans_result[0].dst)\r\n        }\r\n      })\r\n    }\r\n  }\r\n  const emptyInputFun = (event)=>{\r\n    if(event.target.value === \"\"){\r\n      setQuery(\"\")\r\n    }\r\n  }\r\n  // 选项卡功能\r\n  const [select,setSelect] = useState(false)\r\n  let selectFun = (event,index)=>{\r\n    let AppElement = document.getElementsByClassName(\"App\")[0];\r\n    if(index === 1){\r\n      setSelect(false)\r\n      AppElement.classList.add('banner')\r\n      AppElement.classList.remove('banner2')\r\n    }else{\r\n      setSelect(true)\r\n      AppElement.classList.add('banner2')\r\n      AppElement.classList.remove('banner')\r\n    }\r\n  }\r\n  //源语言组件传值\r\n  const [Sources,setSources] = useState(()=>{\r\n    return{\r\n      value:'auto',\r\n      label:\"自动检测\"\r\n    }\r\n  })\r\n  let getSource = (data)=>{\r\n    setSources({value:data.value,label:data.label})\r\n  }\r\n  //目标语言组件传值\r\n  const [Configures,setConfigures] = useState(()=>{\r\n    return{\r\n      value:'en',\r\n      label:\"英文\"\r\n    }\r\n  })\r\n  let getConfigure = (data)=>{\r\n    setConfigures({\r\n      value:data.value,\r\n      label: data.label\r\n    })\r\n  }\r\n  return (\r\n    <div className=\"translate-wrapper\">\r\n      <div className=\"OPTLanguage-container\">\r\n        <Source getSource={(data)=>getSource(data)}/>\r\n        <Configure configure={(data)=>getConfigure(data)}/>\r\n      </div>\r\n      <div className=\"option-container\">\r\n        <div className={select?\"\":\"select-content\"}\r\n             onClick={(event)=>selectFun(event,1)}>单词</div>\r\n        <div className={select?\"select-content\":\"\"}\r\n             onClick={(event)=>selectFun(event,0)}>句子</div>\r\n      </div>\r\n      <div className=\"search-container\">\r\n        <Search\r\n          placeholder=\"请输入要查询的内容\"\r\n          allowClear\r\n          enterButton=\"翻译\"\r\n          size=\"large\"\r\n          onInput={(event)=>{emptyInputFun(event)}}\r\n          onSearch={(value)=>get_baiduFun(value)}\r\n        />\r\n      </div>\r\n      <div className=\"translate-container\">\r\n        {query}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport  default Translate","import Translate from \"./view/translate/translate\"\n\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport React from \"react\";\n\nfunction App() {\n  const cleanClassFun = (event)=>{\n    if(event.target.className !== \"target-container\"){\n      //目标语言\n      let targetElement = document.getElementsByClassName(\"language-container\")[0];\n      let targetElementClassList = (targetElement.className).split(\" \");\n      if(targetElementClassList.indexOf(\"isShowFalse\")>0){\n        targetElement.classList.remove(\"isShowFalse\")\n        targetElement.classList.add(\"isShowTrue\")\n      }\n      //源语言\n      let sourceElement = document.getElementsByClassName(\"source-language-container\")[0]\n      let sourceElementClassList = (sourceElement.className).split(\" \");\n      console.log(sourceElementClassList)\n      if(sourceElementClassList.indexOf(\"isShowFalse\")!== -1){\n        sourceElement.classList.remove(\"isShowFalse\");\n        sourceElement.classList.add(\"isShowTrue\");\n      }\n    }\n  }\n  return (\n    <div className=\"App banner\" onClick={(event)=>{cleanClassFun(event)}}>\n      <Translate/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}